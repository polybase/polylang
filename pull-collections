#!/usr/bin/env python3

import os
import requests
import urllib.parse
import hashlib
import re

# Create the test-collections directory if it doesn't exist
os.makedirs('test-collections', exist_ok=True)

limit = 1000
cursor_after = ""


def get_hashed_filename(original_name):
    """Generate a hashed filename with some of the original name."""
    hashed = hashlib.sha256(original_name.encode()).hexdigest()
    # Use first 8 characters of the hash and the last 20 characters of the original name
    return hashed[:8] + "-" + original_name[-20:]


while True:
    print(f"After: {cursor_after}")
    response = requests.get(
        f"https://testnet.polybase.xyz/v0/collections/Collection/records?limit={limit}&after={cursor_after}")
    response_data = response.json()
    cursor_after = response_data.get('cursor', {}).get('after', '')

    # URL encode the cursor for the next request
    cursor_after = urllib.parse.quote(cursor_after)

    collections = response_data.get('data', [])

    for collection in collections:
        collection = collection.get('data', {})
        id = collection.get('id', '')
        code = collection.get('code', '')

        # Keep only alphanumeric characters and replace others with '-'
        filename = re.sub(r'[^a-zA-Z0-9]', '-', id)

        # If filename is empty or too long, hash it
        if len(filename) == 0 or len(filename) > 255:
            filename = get_hashed_filename(id)

        with open(f"test-collections/{filename}", 'w') as f:
            f.write(code)

    if len(collections) == 0:
        break
